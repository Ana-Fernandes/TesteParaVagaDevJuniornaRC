{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ferna\\\\Divulgame\\\\frontend\\\\src\\\\pages\\\\Login.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport api from '../api/api';\nimport '../login.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Login = () => {\n  _s();\n  const [form, setForm] = useState({\n    email: '',\n    password: ''\n  });\n  const navigate = useNavigate();\n  const handleChange = e => {\n    setForm({\n      ...form,\n      [e.target.name]: e.target.value\n    });\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n    try {\n      const response = await api.post('/auth/login', form, {\n        withCredentials: true // Importante: enviar cookies com a requisição\n      });\n      console.log('Login bem-sucedido', response.data);\n      navigate('/produtor'); // Redireciona para a página do produtor após o login\n    } catch (error) {\n      alert('Erro ao fazer login');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"login-container\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"login-card\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"login-title\",\n        children: \"Bem-vindo!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          name: \"email\",\n          type: \"email\",\n          placeholder: \"Email\",\n          className: \"form-input\",\n          onChange: handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          name: \"password\",\n          type: \"password\",\n          placeholder: \"Senha\",\n          className: \"form-input\",\n          onChange: handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          className: \"form-button\",\n          children: \"Entrar\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"register-link\",\n        children: [\"N\\xE3o tem uma conta? \", /*#__PURE__*/_jsxDEV(\"a\", {\n          href: \"/register\",\n          children: \"Cadastre-se\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 30\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 5\n  }, this);\n};\n_s(Login, \"cT3mLZtFq0Mal9g2EBxMUeh55CA=\", false, function () {\n  return [useNavigate];\n});\n_c = Login;\nexport default Login;\nvar _c;\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["React","useState","useNavigate","api","jsxDEV","_jsxDEV","Login","_s","form","setForm","email","password","navigate","handleChange","e","target","name","value","handleSubmit","preventDefault","response","post","withCredentials","console","log","data","error","alert","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","placeholder","onChange","href","_c","$RefreshReg$"],"sources":["C:/Users/ferna/Divulgame/frontend/src/pages/Login.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport api from '../api/api';\r\nimport '../login.css';\r\n\r\nconst Login = () => {\r\n  const [form, setForm] = useState({ email: '', password: '' });\r\n  const navigate = useNavigate();\r\n\r\n  const handleChange = (e) => {\r\n    setForm({ ...form, [e.target.name]: e.target.value });\r\n  };\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    try {\r\n      const response = await api.post('/auth/login', form, {\r\n        withCredentials: true,  // Importante: enviar cookies com a requisição\r\n      });\r\n\r\n      console.log('Login bem-sucedido', response.data);\r\n      navigate('/produtor');  // Redireciona para a página do produtor após o login\r\n    } catch (error) {\r\n      alert('Erro ao fazer login');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"login-container\">\r\n      <div className=\"login-card\">\r\n        <h2 className=\"login-title\">Bem-vindo!</h2>\r\n        <form onSubmit={handleSubmit}>\r\n          <input\r\n            name=\"email\"\r\n            type=\"email\"\r\n            placeholder=\"Email\"\r\n            className=\"form-input\"\r\n            onChange={handleChange}\r\n          />\r\n          <input\r\n            name=\"password\"\r\n            type=\"password\"\r\n            placeholder=\"Senha\"\r\n            className=\"form-input\"\r\n            onChange={handleChange}\r\n          />\r\n          <button type=\"submit\" className=\"form-button\">\r\n            Entrar\r\n          </button>\r\n        </form>\r\n\r\n        <p className=\"register-link\">\r\n          Não tem uma conta? <a href=\"/register\">Cadastre-se</a>\r\n        </p>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Login;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}