{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ferna\\\\Divulgame\\\\frontend\\\\src\\\\pages\\\\EventsScreen.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst EventsScreen = () => {\n  _s();\n  const {\n    producerId\n  } = useParams(); // Captura o parâmetro da rota\n  const [events, setEvents] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState('');\n  useEffect(() => {\n    const fetchEvents = async () => {\n      try {\n        const response = await axios.get(`/api/produtor/${producerId}`);\n        setEvents(response.data);\n        setLoading(false);\n      } catch (err) {\n        console.error('Erro ao buscar eventos:', err);\n        setError('Não foi possível carregar os eventos.');\n        setLoading(false);\n      }\n    };\n    fetchEvents();\n  }, [producerId]);\n  if (loading) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"Carregando eventos...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 23\n  }, this);\n  if (error) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: error\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 21\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Eventos Criados\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this), events.length > 0 ? /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: events.map(event => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: event.eventName\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Local: \", event.venueName, \", \", event.city, \" - \", event.state]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Data: \", event.startDate, \" \\xE0s \", event.startTime]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Detalhes: \", event.eventDetails]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 15\n        }, this)]\n      }, event.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Voc\\xEA ainda n\\xE3o criou nenhum evento.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 5\n  }, this);\n};\n_s(EventsScreen, \"O8MBY++zU7uythxgo5UbQgJfNSU=\", false, function () {\n  return [useParams];\n});\n_c = EventsScreen;\nexport default EventsScreen;\nvar _c;\n$RefreshReg$(_c, \"EventsScreen\");","map":{"version":3,"names":["React","useState","useEffect","useParams","axios","jsxDEV","_jsxDEV","EventsScreen","_s","producerId","events","setEvents","loading","setLoading","error","setError","fetchEvents","response","get","data","err","console","children","fileName","_jsxFileName","lineNumber","columnNumber","length","map","event","eventName","venueName","city","state","startDate","startTime","eventDetails","id","_c","$RefreshReg$"],"sources":["C:/Users/ferna/Divulgame/frontend/src/pages/EventsScreen.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { useParams } from 'react-router-dom';\r\nimport axios from 'axios';\r\n\r\nconst EventsScreen = () => {\r\n  const { producerId } = useParams(); // Captura o parâmetro da rota\r\n  const [events, setEvents] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState('');\r\n\r\n  useEffect(() => {\r\n    const fetchEvents = async () => {\r\n      try {\r\n        const response = await axios.get(`/api/produtor/${producerId}`);\r\n        setEvents(response.data);\r\n        setLoading(false);\r\n      } catch (err) {\r\n        console.error('Erro ao buscar eventos:', err);\r\n        setError('Não foi possível carregar os eventos.');\r\n        setLoading(false);\r\n      }\r\n    };\r\n\r\n    fetchEvents();\r\n  }, [producerId]);\r\n\r\n  if (loading) return <div>Carregando eventos...</div>;\r\n  if (error) return <div>{error}</div>;\r\n\r\n  return (\r\n    <div>\r\n      <h1>Eventos Criados</h1>\r\n      {events.length > 0 ? (\r\n        <ul>\r\n          {events.map((event) => (\r\n            <li key={event.id}>\r\n              <h2>{event.eventName}</h2>\r\n              <p>Local: {event.venueName}, {event.city} - {event.state}</p>\r\n              <p>Data: {event.startDate} às {event.startTime}</p>\r\n              <p>Detalhes: {event.eventDetails}</p>\r\n            </li>\r\n          ))}\r\n        </ul>\r\n      ) : (\r\n        <p>Você ainda não criou nenhum evento.</p>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default EventsScreen;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}